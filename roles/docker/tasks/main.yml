- name: Install required system packages
  become: true
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - lsb-release
      - gawk
      - gnupg

- name: Get distro name
  shell: "lsb_release -si | awk '{print tolower($0)}'"
  register: distro_name
- debug:
    var: distro_name

- name: Get release name
  shell: "lsb_release -cs | awk '{print tolower($0)}'"
  register: release_name
- debug:
    var: release_name

- name: Get arch name
  shell: "dpkg --print-architecture"
  register: arch_name
- debug:
    var: arch_name

- name: Add Docker GPG apt Key
  become: true
  apt_key:
    url: "https://download.docker.com/linux/{{ distro_name.stdout }}/gpg"
    state: present

- name: Add Docker Repository
  become: true
  apt_repository:
    repo: "deb [arch={{ arch_name.stdout }} signed-by=/etc/apt/trusted.gpg] \
           https://download.docker.com/linux/{{ distro_name.stdout }} \
           {{ release_name.stdout }} stable"
    state: present

- name: Has docker
  become: false
  shell: |
    docker --version
  register: has_docker
  failed_when: false
  changed_when: false

- name: Install and configure docker
  become: true
  when: has_docker.rc != 0
  block:
    - name: Install packages
      apt:
        name: "{{ packages }}"
        state: latest
        update_cache: true
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin

    - name: Create docker group
      group:
        name: docker
        state: present

    - name: Add user to group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

- name: Validate docker
  become: false
  shell: |
    docker --version
    newgrp docker << EOT
      docker run hello-world
    EOT
  register: docker_output
  failed_when: docker_output.rc != 0