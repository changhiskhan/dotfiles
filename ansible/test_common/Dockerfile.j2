# From molecule.yml

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

RUN if [ $(command -v apt-get) ]; then \
      apt-get update && \
      apt-get install -y python3 sudo bash ca-certificates iproute2 init git && \
      apt-get clean; \      
    elif [ $(command -v zypper) ]; then \
      zypper refresh && \
      zypper install -y python3 sudo bash python3-xml iproute2 systemd-sysvinit git && \
      zypper clean -a; \
    elif [ $(command -v apk) ]; then \
      apk update && \
      apk add --no-cache python3 sudo bash ca-certificates git; \
    elif [ $(command -v xbps-install) ]; then \
      xbps-install -Syu && \
      xbps-install -y python3 sudo bash ca-certificates iproute2 git && \
      xbps-remove -O; \
    elif [ $(command -v swupd) ]; then \
      swupd bundle-add python3-basic sudo iproute2 git; \
    elif [ $(command -v dnf) ] && cat /etc/os-release | grep -q '^NAME=Fedora' && \
    cat /etc/os-release | grep -q '^VERSION_ID=30'; then \
      dnf makecache && \
      dnf --assumeyes install python3 sudo python-devel python3-dnf bash iproute git && \
      dnf clean all; \
    elif [ $(command -v dnf) ] && cat /etc/os-release | grep -q '^NAME=Fedora'; then \
      dnf makecache && \
      dnf --assumeyes install python3 sudo python-devel python*-dnf bash iproute git && \
      dnf clean all; \
    elif [ $(command -v dnf) ] && cat /etc/os-release | grep -q '^NAME="CentOS Linux"' ; then \
      dnf makecache && \
      dnf --assumeyes install python39 sudo platform-python-devel python*-dnf bash iproute git && \
      dnf clean all && \
      ln -s /usr/bin/python3 /usr/bin/python; \
    elif [ $(command -v yum) ]; then \
      yum makecache fast && \
      yum install -y python3 sudo yum-plugin-ovl bash iproute git && \
      sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && \
      yum clean all; \
    fi

# Create `ansible` user with sudo permissions and membership in `DEPLOY_GROUP`
# This template gets rendered using `loop: "{{ molecule_yml.platforms }}"`, so
# each `item` is an element of platforms list from the molecule.yml file for this scenario.
ENV ANSIBLE_USER=ansible DEPLOY_GROUP=deployer
ENV SUDO_GROUP={{'sudo' if ( ('debian' in item.image) or
                             ('ubuntu' in item.image) ) else 'wheel' }}
RUN set -xe \
  && groupadd -r ${ANSIBLE_USER} \
  && groupadd -r ${DEPLOY_GROUP} \
  && useradd -m -g ${ANSIBLE_USER} ${ANSIBLE_USER} \
  && usermod -aG ${SUDO_GROUP} ${ANSIBLE_USER} \
  && usermod -aG ${DEPLOY_GROUP} ${ANSIBLE_USER} \
  && sed -i "/^%${SUDO_GROUP}/s/ALL\$/NOPASSWD:ALL/g" /etc/sudoers


USER ${ANSIBLE_USER}
WORKDIR /home/${ANSIBLE_USER}
RUN git clone https://github.com/${REPO}